package manav;
//showing deadlock
public class Threadex5 extends Thread implements Runnable
{
    static String a="a",b="b";
    public  synchronized void runningThreadA() {
    	synchronized(a)
		{	System.out.println("Thread a: locked resource 1"); 
			try {Thread.currentThread().sleep(1000);}catch(Exception e) {e.getMessage();}
			try {Thread.currentThread().join();} catch (InterruptedException e) {e.printStackTrace();}
			synchronized(b)
			{	
				System.out.println("Thread a: locked resource 2"); 
				
				notifyAll();
			}
        }
    }
    public  synchronized void runningThreadB() {
    	synchronized(b)
		{	System.out.println("Thread b: locked resource 2"); 
			//System.out.println(a+b);
			try {Thread.currentThread().sleep(1000);}catch(Exception e) {e.getMessage();}
			
			synchronized(a)
			{	
				
				System.out.println("Thread b: locked resource 1");
				try {wait();} catch (InterruptedException e) {e.printStackTrace();}	
				notifyAll();
			}
        }
    }
    public void run()
    {
        if((Thread.currentThread().getName()).equals("a"))
        {
			runningThreadA();
		}
        else
        {
			runningThreadB();
		}
    }
    public static void main(String args[])
    {
	    Thread t1=new Thread(new Threadex5(),"a");
	    Thread t2=new Thread(new Threadex5(),"b");
		t1.start();t2.start();      
	}
}
